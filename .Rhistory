nxt()
sd(mpg.midsize)
1.89554 ^ 2
25
range(cars$price)
61.9 - 7.4
var(cars$price)
sd(cars$price)
20
csvfileurl <- 'https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv'
csvdata <- read.csv(csvfileurl , isURL =TRUE)
csvdata <- read.file(csvfileurl, header=TRUE, sep=',', isURL =TRUE)
csvdata <- read.table(csvfileurl, header=TRUE, sep=',', isURL =TRUE)
??isURL
csvdata <- read.csv(csvfileurl)
View(csvdata)
csvdata[[1]]$sleep_rem
csvdata[[1]][sleep_rem]
csvdata[[sleep_rem]][1]
csvdata[[sleep_rem]]
csvdata$sleep_rem
csvdata[,c(1,csvdata$sleep_rem)]
csvdata[c('name, 'sleep_rem'),]
csvdata[c('name', 'sleep_rem'),]
csvdata[,c('name', 'sleep_rem')]
csvdata[,c('name', 'sleep_total')]
c(csvdata$sleep_total, 1000)
summary(csvdata$sleep_total)
mean(csvdata[csvdata$sleep_total > 18, csvdata$sleep_total])
csvdata[csvdata$sleep_total > 18, csvdata$sleep_total]
csvdata[csvdata$sleep_total > 18, ]
csvdata[csvdata$sleep_total > 18, 'sleep_total']
csvdata[csvdata$sleep_total > 18, csvdata$sleep_total]
csvdata[csvdata$sleep_total > 18, sleep_total]
mean(csvdata[csvdata$sleep_total > 18, 'sleep_total'])
csvdata[which(csvdata$sleep_total > 18 & csvdata$sleep_rem < 3), 'name']
csvdata[which(csvdata$sleep_total > 18 & csvdata$sleep_rem < 3),]
csvdata[order(desc(csvdata%sleep_total),]
csvdata[order(desc(csvdata%sleep_total)),]
csvdata[order(csvdata%sleep_total, desc=TRUE),]
csvdata[order(csvdata%sleep_total, decreasing = TRUE),]
csvdata[order(csvdata%sleep_total),]
csvdata[order(csvdata$sleep_total, decreasing = TRUE),]
csvdata[order(csvdata$sleep_total),]
rank(c(1,2,2,3))
rank(csvdata[csvdata$sleep_total ,])
rank(csvdata$sleep_total)
cvsdata[match('Cotton rat', csvdata$name), ]
csvdata[match('Cotton rat', csvdata$name), ]
csvdata[match(c('Cotton rat', 'lion'), csvdata$name), ]
csvdata[match(c('Cotton rat', 'Lion'), csvdata$name), ]
table(csvdata)
class(csvdata)
dim(csvdata)
table(csvdata$genus)
table(csvdata$genus)[['Rodentia']]
table(csvdata$genus)$Rodentia
table(csvdata$genus)['Rodenti']
table(csvdata$genus)['Rodentia']
table(csvdata$genus)[1]
table(csvdata$genus)['Acinonyx']
table(csvdata$genus)['Rodents']
table(csvdata$order)['Rodentia']
s = split(csvdata$sleep_total, csvdata$order)
s
s[[17]]
mean(s[[17]])
tapply(csvdata$sleep_total, csvdata$order, sd )[['Primates']]
install.packages(c("codetools", "manipulate", "Matrix"))
make.names(c('A test For ()', 'BTest to_some!case'))
make.names(c('A test For ()', 'BTest to_some!case'), unique = TRUE)
tolower(make.names(c('A test For ()', 'BTest to_some!case'), unique = TRUE))
gsub([^\w], '', 'asd!a  asd(dv){a>')
gsub('[^\w]', '', 'asd!a  asd(dv){a>')
gsub('[^\\w]', '', 'asd!a  asd(dv){a>')
gsub('[^\\W]', '', 'asd!a  asd(dv){a>')
gsub('[^\\s]', '', 'asd!a  asd(dv){a>')
gsub('[^a-zA-Z]', '', 'asd!a  asd(dv){a>')
gsub('[^:letters:]', '', 'asd!a  asd(dv){a>')
gsub('[^:letter:]', '', 'asd!a  asd(dv){a>')
gsub('[^:lettera:]', '', 'asd!a  asd(dv){a>')
gsub('[^a:zA:Z]', '', 'asd!a  asd(dv){a>')
gsub('[^\\a]', '', 'asd!a  asd(dv){a>')
gsub('[^:alpha:]', '', 'asd!a  asd(dv){a>')
gsub('[^:as:]', '', 'asd!a  asd(dv){a>')
gsub('^\\a', '', 'asd!a  asd(dv){a>')
gsub('\\l', '', 'asd!a  asd(dv){a>')
gsub('\\l{1}', '', 'asd!a  asd(dv){a>')
gsub('\l{1}', '', 'asd!a  asd(dv){a>')
gsub(':lower:', '', 'asd!a  asd(dv){a>')
gsub('[:symbol:]', '', 'asd!a  asd(dv){a>')
gsub(as.character('[:symbol:]') , '', 'asd!a  asd(dv){a>')
gsub(as.character('[^:symbol:]') , '', 'asd!a  asd(dv){a>')
gsub('([^:symbol:])' , '', 'asd!a  asd(dv){a>')
gsub('[[^:symbol:]]' , '', 'asd!a  asd(dv){a>')
gsub('[[^\\a]]' , '', 'asd!a  asd(dv){a>')
gsub('[[\\a]]' , '', 'asd!a  asd(dv){a>')
gsub('[[:lower:]]' , '', 'asd!a  asd(dv){a>')
gsub('[[:symbol:]]' , '', 'asd!a  asd(dv){a>')
gsub('[[:punct:]]' , '', 'asd!a  asd(dv){a>')
?gsub
example(gsub)
gsub('[[:punct:]]' , '', 'asd!a  asd(dv){a>')
gsub('[[:punct:]]' , '', make.names('asd!a  asd(dv){a>')
)
gsub('[[:punct:]]' , '', make.names('asd!a asd(dv){a>'))
make.names(gsub('[[:punct:]]' , '', 'asd!a asd(dv){a>'))
gsub('[[:punct:]]', ' ', 'asd!b ;kam(sss)>')
gsub('[[:punct:]]', ' ', 'asd!b ;kam(sss)>') %>%
make.names %>%
tolower()
gsub('[[:punct:]]', ' ', 'asd!b ;kam(sss)>') %>%
make.names() %>%
tolower()
a <- gsub('[[:punct:]]', ' ', 'asd!b ;kam(sss)>') %>%
make.names() %>%
tolower()
?`%>%`
>?`%>%`
??`%>%`
??pipe
library(magrittr)
gsub('[[:punct:]]', ' ', 'asd!b ;kam(sss)>') %>%
make.names() %>%
tolower()
P <- matrix(c(0.4,0.3,0.1,0.4,0.3,0.6,0.2,0.4,0.3), 3, 3)
p
P
P <- matrix(c(0.4,0.3,0.1,0.4,0.3,0.6,0.2,0.4,0.3), 3, 3, byrow = TRUE)
P
x <- cbind(0, 1, 0)
x
x <- rbind(0, 1, 0)
x
x1 <- P %*% x
x1
x2 <- P %*% x1
x2
get_x <- function(n){}
get_x <- function(n, x){
for(i in 1:n){
x <<- P %*% x
}
x
}
get_x(365, x)
get_x <- function(n, x){
for(i in 1:n){
x <<- P %*% x
}
return x
}
get_x <- function(n, x){
for(i in 1:n){
x <<- P %*% x
}
return(x)
}
get_x(365, x)
x
x <- rbind(0, 1, 0)
get_x(365, x)
get_x <- function(n, x){
for(i in 1:n){
x <- P %*% x
}
return(x)
}
x <- rbind(0, 1, 0)
get_x(365, x)
get_x(365, x)
x <- rbind(1, 0, 0)
get_x(365, x)
x <- rbind(1, 0, 0)
P %*% x
x <- rbind(0, 1, 0)
P %*% x
x <- rbind(0, 0, 1)
P %*% x
x <- rbind(0, 0, 1)
get_x(2, x)
x <- rbind(0, 0, 1)
x <- rbind(1, 0, 1)
x <- rbind(0,0,1)
get_x(1, x)
x <- rbind(0,1,0)
get_x(2, x)
A <- matrix(c(1, -1, 1, -1),2,2)
A %*% A
A <- matrix(c(1, 0, 0, 1),2,2)
A %*% A
A %*% A %*% A
A <- matrix(c(0, -1, 1, 0),2,2)
A %*% A
A %*% A %*% A
A %*% A
A2 <- A %*% A
A3 <- A2 %*% A
A3
A31 <- A %*% A2
A31
source('~/.active-rstudio-document', echo=TRUE)
setwd('RepData_PeerAssessment1/')
source('~/.active-rstudio-document', echo=TRUE)
library('dplyr')
total_preday <- all_data %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(total_preday$sum)
axis(2, at=total_preday$date , labels=total_preday$date)
summary(total_preday)
library('dplyr')
total_preday <- all_data %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(total_preday$sum)
axis(2, at=total_preday$date , labels=total_preday$date)
summary(total_preday)
library('dplyr')
total_preday <- all_data %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(total_preday$sum)
axis(1, at=total_preday$date , labels=total_preday$date)
summary(total_preday)
library('dplyr')
total_preday <- all_data %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(total_preday$sum)
axis(1, at=total_preday$date , labels=total_preday$date)
summary(total_preday$sum)
plot(all_data$interval, all_data$steps)
plot(all_data$interval, all_data$steps, type='l')
plot(all_data$interval, all_data$steps, type='l')
abline(summary_data$Mean ,h = TRUE)
library('dplyr')
total_preday <- all_data %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(total_preday$sum)
axis(1, at=total_preday$date , labels=total_preday$date)
(summary_data <- summary(total_preday$sum))
plot(all_data$interval, all_data$steps, type='l')
abline(summary_data$Mean ,h = TRUE)
str(summary_data)
plot(all_data$interval, all_data$steps, type='l')
abline(summary_data['Mean'] ,h = TRUE)
summary_data['Mean']
plot(all_data$steps,all_data$interval, type='l')
abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$steps, type='l')
abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$steps, type='l')
#abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$steps,interval_steps$interval, type='l')
#abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$sum,interval_steps$interval, type='l')
#abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
#abline(summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(a=summary_data['Mean'] ,h = TRUE)
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'])
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
axis(1, at=interval_steps$interval , labels=interval_steps$interval)
abline(h=summary_data['Mean'], col='red')
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
max_interval <- interval_steps[which(interval_steps$sum= max(interval_steps$sum)), interval]
?which
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), interval]
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 2]
max_interval
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval']
max_interval
?legend
legend(x=c('Mean', 'Medain'), y=c(1, 2))
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
abline(h=summary_data['Medain'], col='blue')
legend('topright', col=c('red', 'blue'), legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
abline(h=summary_data['Medain'], col='blue')
legend('topright', pch=c(1), col=c('red', 'blue'), legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
?pch
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
abline(h=summary_data['Medain'], col='blue')
legend('topright', col=c('red', 'blue'), lty=1, legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
lty=1
summary_data
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
# abline(h=summary_data['Median'], col='blue')
legend('topright', col=c('red', 'blue'), lty=1, legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
# abline(h=summary_data['Median'], col='blue')
legend('topright', col=c('red', 'blue'), lty=1, legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
abline(h=summary_data['Median'], col='blue')
legend('topright', col=c('red', 'blue'), lty=1, legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), 'interval'])
interval_steps <- all_data %>%
group_by(interval) %>%
summarise(sum = sum(steps, na.rm = TRUE))
plot(interval_steps$interval, interval_steps$sum, type='l')
abline(h=summary_data['Mean'], col='red')
abline(h=summary_data['Median'], col='blue')
legend('topright', col=c('red', 'blue'), lty=1, legend = c('Mean', 'Median'))
(max_interval <- interval_steps[which(interval_steps$sum==max(interval_steps$sum)), ])
count(all_data[is.NA(all_data$steps)])
count(all_data[is.na(all_data$steps)])
count(all_data[is.na(all_data$steps),])
count(all_data[is.na(all_data$steps),])
fill_na <- all_data[,]
fill_na[is.na(all_data$steps), 'steps'] <- summary_data['Mean']
View(fill_na)
count(all_data[is.na(all_data$steps),])
fill_na <- all_data[,]
fill_na[is.na(all_data$steps), 'steps'] <- summary_data['Mean']
fill_na_preday <- fill_na %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(fill_na_preday$sum)
axis(1, at=fill_na_preday$date , labels=fill_na_preday$date)
(summary_data <- summary(fill_na_preday$sum))
?weekday
??weekday
weekdays('2012-10-01')
?date
?POXISct
?POXISlt
??POXIS
?POIXS
??POIXS
as.POSIXct('2012-10-01')
weekdays(as.POSIXct('2012-10-01'))
str(weekdays(as.POSIXct('2012-10-01')))
weekdays(as.POSIXct('2012-10-01', tz="UTC"))
str(as.POSIXct('2012-10-01'))
?POSIXct
year(as.POSIXct('2012-10-01', tz="UTC"))
as.POSIXct('2012-10-01', tz="UTC")$year
as.POSIXct('2012-10-01', tz="UTC").year
a <- as.POSIXct('2012-10-01')
a#year
a$year
str(a)
a <- as.POSIXlt('2012-10-01')
a$year
a$weekday
a$weekdays
a$wdays
a$wday
a <- as.POSIXlt('2012-10-02')
a$wday
a <- as.POSIXlt('2012-10-07')
a$wday
weekday_data <- all_data[which( as.POSIXlt(all_data$date)$wday in c(1:5) ),]
weekend_data <- all_data[which( ! as.POSIXlt(all_data$date)$wday in c(1:5) ),]
1 in c(1:5)
weekday_data <- all_data[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- all_data[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
View(weekday_data)
View(weekend_data)
weekday_data <- all_data[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- all_data[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekday_interval_steps <- weekday_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
weekend_interval_steps <- weekend_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(1, 2))
plot(weekday_interval_steps$interval, weekday_interval_steps$mean, type='l')
plot(weekend_interval_steps$interval, weekend_interval_steps$mean, type='l')
weekday_data <- all_data[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- all_data[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekday_interval_steps <- weekday_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
weekend_interval_steps <- weekend_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(1, 2))
plot(weekday_interval_steps$interval, weekday_interval_steps$mean, type='l', main = "Weekday")
plot(weekend_interval_steps$interval, weekend_interval_steps$mean, type='l', main = "Weekend")
weekday_data <- all_data[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- all_data[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekday_interval_steps <- weekday_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
weekend_interval_steps <- weekend_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(2, 1))
plot(weekday_interval_steps$interval, weekday_interval_steps$mean, type='l', main = "Weekday")
plot(weekend_interval_steps$interval, weekend_interval_steps$mean, type='l', main = "Weekend")
weekday_data <- fill_na[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- fill_na[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekday_interval_steps <- weekday_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
weekend_interval_steps <- weekend_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(2, 1))
plot(weekday_interval_steps$interval, weekday_interval_steps$mean, type='l', main = "Weekday")
plot(weekend_interval_steps$interval, weekend_interval_steps$mean, type='l', main = "Weekend")
count(all_data[is.na(all_data$steps),])
fill_na <- all_data[,]
fill_na[is.na(all_data$steps), 'steps'] <- summary_data['Mean']
fill_na_preday <- fill_na %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
barplot(fill_na_preday$sum)
axis(1, at=fill_na_preday$date , labels=fill_na_preday$date)
(summary_data <- summary(fill_na_preday$sum))
View(weekend_data)
View(weekday_data)
weekday_data <- fill_na[which( as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekend_data <- fill_na[which( ! as.POSIXlt(all_data$date)$wday %in% c(1:5) ),]
weekday_interval_steps <- weekday_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
weekend_interval_steps <- weekend_data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(2, 1))
plot(weekday_interval_steps$interval, weekday_interval_steps$mean, type='l', main = "Weekday")
plot(weekend_interval_steps$interval, weekend_interval_steps$mean, type='l', main = "Weekend")
View(weekday_data)
